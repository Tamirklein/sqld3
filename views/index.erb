<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
<head>
<script type="text/javascript" src="/js/peg-0.6.1.min.js"></script>
<script type="text/javascript" src="/js/qunit/qunit.js"></script>
<link rel="stylesheet" type="text/css" href="/js/qunit/qunit.css" media="screen">
</head>
<body>
<script type="text/pegjs" id="sql_pegjs">
{
<%= File.open("public/js/sql.pegjs-head.js", "r") {|f| f.read } %>
}

<%= File.open("sql.pegjs", "r") {|f| f.read } %>
</script>
<script>
var sql_pegjs;

module("PEG", {
  setup: function() {
    sql_pegjs = document.getElementById("sql_pegjs").innerHTML;
  }
});

test("smoke", 2, function() {
  var parser = PEG.buildParser(sql_pegjs);
  ok(parser);
  var s = parser.parse(
    "SELECT a.x AS foo, b.y, x.*, * FROM a.x, b.a, d.p, d1.a1 AS b1;");
  deepEqual(s, [
  {
    "stmt": "select",
    "select_cores": [ {
        "results": [
          { "table": "a", "column": "x", "alias": "foo" },
          { "table": "b", "column": "y" },
          { "table": "x", "column": "*" },
          { "column": "*" }
        ],
        "from": [
          { "database": "a", "table": "x"
          },
          { "join_constraint": null,
            "join_op": "JOIN",
            "database": "b", "table": "a"
          },
          { "join_constraint": null,
            "join_op": "JOIN",
            "database": "d", "table": "p"
          },
          { "join_constraint": null,
            "join_op": "JOIN",
            "database": "d1", "table": "a1", "alias": "b1",
          }
        ]
      }
    ]
  }]);
});

test("smoke-from", 2, function() {
  var parser = PEG.buildParser(sql_pegjs);
  ok(parser);
  var s = parser.parse(
    "SELECT * FROM a, b, x AS b1;");
  deepEqual(s, [
  {
    "stmt": "select",
    "select_cores": [ {
        "results": [ { "column": "*" } ],
        "from": [
          { "table": "a" },
          { "join_constraint": null,
            "join_op": "JOIN",
            "table": "b"
          },
          { "join_constraint": null,
            "join_op": "JOIN",
            "table": "x",
            "alias": "b1"
          }
        ]
      }
    ]
  }]);
});

test("smoke-where", 2, function() {
  var parser = PEG.buildParser(sql_pegjs);
  ok(parser);
  var s = parser.parse(
    "SELECT * FROM a WHERE a = a;");
  deepEqual(s, [
  {
    "stmt": "select",
    "select_cores": [ {
        "results": [ { "column": "*" } ],
        "from": [
          { "table": "a" },
          { "join_constraint": null,
            "join_op": "JOIN",
            "table": "b"
          },
          { "join_constraint": null,
            "join_op": "JOIN",
            "table": "x",
            "alias": "b1"
          }
        ]
      }
    ]
  }]);
});
</script>

<div>
  <h1 id="qunit-header">Test Suite</h1>
  <h2 id="qunit-banner"></h2>
  <div id="qunit-testrunner-toolbar"></div>
  <h2 id="qunit-userAgent"></h2>
  <ol id="qunit-tests"></ol>
  <div id="qunit-fixture">test markup</div>
</div>
</body>
</html>
